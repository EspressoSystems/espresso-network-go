name: Build Rust Dynamic Libraries

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build Dynamic Library
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: "1.81.0"

      - name: Build Dynamic Library
        run: |
          echo "Building on: ${{ matrix.os }}"
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            export LD_LIBRARY_PATH="$PWD/target/lib:$LD_LIBRARY_PATH"
          fi
          mkdir -p target/lib && \
          cargo build --release --locked --manifest-path ./verification/rust/Cargo.toml && \
          if [ "${{ matrix.os }}" == "macos-latest" ]; then
            cp ./verification/rust/target/release/libespresso_crypto_helper.dylib target/lib/
          else
            cp ./verification/rust/target/release/libespresso_crypto_helper.so target/lib/
          fi

      - name: Upload Artifact (Push Only)
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: libespresso_crypto_helper.${{ matrix.os == 'macos-latest' && 'dylib' || 'so' }}
          path: target/lib/libespresso_crypto_helper.${{ matrix.os == 'macos-latest' && 'dylib' || 'so' }}

  release:
    name: Upload Release Artifacts
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all Artifacts
        uses: actions/download-artifact@v4
        with:
          path: target/lib

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/lib/*.dylib
            target/lib/*.so
