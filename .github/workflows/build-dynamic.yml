name: Build Rust Dynamic Libraries

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build Dynamic Library
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - aarch64-apple-darwin
          - x86_64-apple-darwin

    runs-on: ${{ (matrix.target == 'x86_64-unknown-linux-gnu' || matrix.target == 'aarch64-unknown-linux-gnu') && 'ubuntu-latest' || 'macos-latest' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: "1.81.0"
          targets: ${{ matrix.target }}

      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Set Enviornment
        # Install tools and set environment variables like this example
        # https://github.com/briansmith/ring/blob/main/mk/cargo.sh
        # https://github.com/briansmith/ring/blob/main/mk/install-build-tools.sh
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        run: |
          sudo apt update
          sudo apt-get install qemu-user gcc-aarch64-linux-gnu libc6-dev-arm64-cross
          echo CFLAGS_aarch64_unknown_linux_gnu="--sysroot=/usr/aarch64-linux-gnu" >> ${{ github.env }}
          echo CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc >> ${{ github.env }}
          echo CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_RUNNER="qemu-aarch64 -L /usr/aarch64-linux-gnu" >> ${{ github.env }}

      - name: Build Dynamic Library
        run: |
          echo "Building for target: ${{ matrix.target }}"
          if [ "$(uname -s)" != "Darwin" ]; then
            export LD_LIBRARY_PATH="$PWD/target/lib:$LD_LIBRARY_PATH"
          fi
          mkdir -p target/lib && \
          cargo build --release --locked --target ${{ matrix.target }} --manifest-path ./verification/rust/Cargo.toml && \
          if [ "$(uname -s)" == "Darwin" ]; then
            cp ./verification/rust/target/${{ matrix.target }}/release/libespresso_crypto_helper.dylib target/lib/libespresso_crypto_helper-${{ matrix.target }}.dylib
          fi
          if [ "$(uname -s)" != "Darwin" ]; then
            cp ./verification/rust/target/${{ matrix.target }}/release/libespresso_crypto_helper.so target/lib/libespresso_crypto_helper-${{ matrix.target }}.so
          fi

      - name: Upload Artifact (Push Only)
        uses: actions/upload-artifact@v4
        with:
          name: libespresso_crypto_helper-${{ matrix.target }}.${{ contains(matrix.target, 'apple-darwin') && 'dylib' || 'so' }}
          path: target/lib/libespresso_crypto_helper-${{ matrix.target }}.${{ contains(matrix.target, 'apple-darwin') && 'dylib' || 'so' }}

  release:
    name: Upload Release Artifacts
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all Artifacts
        uses: actions/download-artifact@v4
        with:
          path: target/lib

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/lib/*/*.a
