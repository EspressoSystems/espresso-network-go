name: Build Rust Static Libraries

on:
  push:
    branches:
      - main
    tags:
      - ^v
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build Static Library
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu

    runs-on: ["ubuntu-latest"]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: "1.81.0"
          targets: ${{ matrix.target }}

      - name: Set Enviornment
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        run: |
          echo CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc >> ${{ github.env }}

      - name: Build Static Library
        run: |
          echo "Building for target: ${{ matrix.target }}"
          mkdir -p target/lib && \
          cargo build --release --locked --target ${{ matrix.target }} --manifest-path ./verification/rust/Cargo.toml && \
          cp ./verification/rust/target/${{ matrix.target }}/release/libespresso_crypto_helper.a target/lib/libespresso_crypto_helper-${{ matrix.target }}.a

      - name: Upload Artifact (Push Only)
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: static-library-${{ matrix.target }}
          path: target/lib/libespresso_crypto_helper-${{ matrix.target }}.a

  release:
    name: Upload Release Artifacts
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all Artifacts
        uses: actions/download-artifact@v3
        with:
          path: target/lib

      - name: Upload Release Assets
        run: |
          for file in target/lib/*.a; do
            echo "Uploading $file"
            gh release upload ${{ github.event.release.tag_name }} "$file" --repo ${{ github.repository }}
          done
